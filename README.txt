This repository contains files associated with the paper

"Open Source SDR Frontend and Measurements for 60GHz Wireless Experimentation"
by Per Zetterberg and Ramin Fardi, which will be submitted for journal
publication. Ask per.zetterberg@ee.kth.se for current status.

To build the executables simply do:

make all

Prerequisites:

UHD driver (see ettus.com). Tested against release_003_006_002.

List of files used in the paper (files not listed are unrelated to
the paper):

----------------------------------------------------------------------------
| File             | Purpose                                               |
----------------------------------------------------------------------------
| board_60GHz.cpp  | Defines the classes board_60GHz_RX and board_60GHz_TX |
| 		   | which are used to control the RX and TX boards,       |
|                  | respectively (see the paper), using a USRP N2xx.      |
|                  |                                                       |
| board_60GHz.hpp  | Header file corresponding to the classes above.       |
| 		   |                                                       |
| rx_60GHz.cpp     | Program which uses the board_60GHz_RX class           |
|                  | to control a single RX board connected to a USRP N2xx.|
| 		   | The program also grabs samples to file.	           |
|                  |                                                       |
| tx_60GHz.hpp     | Program which uses the board_60GHz_TX class to        |
|                  | control a single TX board connected to a USRP N2xx.   |
|                  | The program also reads samples from file and transmits|
|                  | them repeatedly until interrupted.                    |
|                  |                                                       |
| rx_60GHz_MIMO.cpp| As rx_60GHz.cpp but for setups with two USRP N2xx and |
|                  | two RX boards. The USRP N2xx synchronized by a MIMO   |
|                  | cable.                                                |
|                  |                                                       |
| tx_60GHz_MIMO.cpp| As tx_60GHz.cpp but for setups with two USRP N2xx and |
|                  | two TX boards. The USRP N2xx synchronized by a MIMO   |
|                  | cable.                                                |
|                  |                                                       |
| Makefile         | Makefile for building all the executables(do Make all)|
|                  |                                                       |
| rx_60GHz.m       | Matlab/octave interface to rx_60GHz.                  |
|                  |                                                       |
| tx_60GHz.m       | Matlab/octave interface to tx_60GHz.                  |
|                  |                                                       |
| rx_60GHz_MIMO.m  | Matlab/octave interface to rx_60GHz_MIMO.             |
|                  |                                                       |
| tx_60GHz_MIMO.m  | Matlab/octave interface to tx_60GHz_MIMO.             |
|                  |                                                       |
| modem_OFDM4.m    | Matlab/octave function creating                       |
|                  | OFDM modulation tailored to the application. Uses     |
|                  | 625kHz or 1250kHz subcarrier spacing dependong on the |
|                  | sample rate (25Msps or 50Msps). 	      	           |
|                  |                                                       |
| demod_OFDM4.m    | Matlab/octave demodulator functions.                  |
|                  |                                                       |
|synchronize_OFDM1.m    Matlab/octave function finding start of training   |
|                  | sequence (and frequency offset) of burst generated by |
|                  | moded_OFDM4.m.                                        |
|                  |                                                       |
| demo_tx.m        | TX side of SISO demonstrator based on the above.      |
|                  | Start TX side first.                                  |
|                  |                                                       |
| demo_rx.m        | RX side of SISO demonstrator based on the above.      |
|                  | Start TX side first.                                  |
|                  |                                                       |
| demo_MIMO_tx.m   | TX side of MIMO 2x2 spatial multippexing demonstrator |
|                  | based on the above. Start TX side first.              |
|                  |                                                       |
| demo_MIMO_rx.m   | RX side of MIMO 2x2 spatial multippexing demonstrator |
|                  | based on the above. Start TX side first.              |
|                  |                                                       |
| phase_noise_plot.m  Matlab script to generate the phase-noise plot in    |
|                  | Fig. 6 of the paper.                                  |
|                  |                                                       |
|                  |                                                       |
| plotting_phase_noise.m | Spectrum estimation for phase-noise measurements.|
|                                                                          |
| subcarrier_spacing.m  Matlab script to generate the curves in Fig. 8     |
|                  | of the paper which shows BER versus FFT size.         |
|                  |                                                       |
| get_data2.m      | Function to read data from phase-noise measuremente   |
|                  | files.                                                |
|                  |                                                       |
| filter_phase_noise.m Equalize the power of I and Q and filter-out over-  |
|                  | tones in the phase_noise measurements.                |
|                  |                                                       |
| log_data.m       | When performing the MIMO measurements of the paper    |
|                  | demo_MIMO_tx.m was run at the transmitter with        |
|                  | the parameter repeat_single_antenna set to zero.      |
|                  | At the receive log_data was run.                      |
|                  |                                                       |
| process_MIMO_measurements.m                                              |
| process_MIMO_measurement.m                                               |
| These files are used to produce Fig. 9 of the paper. In the header of    | 
| process_MIMO_measurements.m the transmitted data sequence is described in|
| more detail.                                                             |
----------------------------------------------------------------------------

